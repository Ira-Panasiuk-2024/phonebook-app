tags:
  - Contacts
summary: Get list of contacts
operationId: getContacts
description: Get paginated list of user's contacts with sorting, filtering and search functionality
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    schema:
      type: integer
      example: 1
      minimum: 1
      default: 1
    description: Page number for pagination
  - in: query
    name: perPage
    schema:
      type: integer
      example: 10
      minimum: 1
      maximum: 100
      default: 10
    description: Number of items per page
  - in: query
    name: sortOrder
    schema:
      type: string
      enum: ['asc', 'desc']
      default: 'asc'
    description: Sort order (ascending or descending)
  - in: query
    name: sortBy
    schema:
      type: string
      enum:
        [
          'name',
          'phoneNumber',
          'email',
          'contactType',
          'isFavourite',
          'createdAt',
          'updatedAt',
        ]
      default: 'phoneNumber'
      example: 'name'
    description: Field to sort by
  - in: query
    name: isFavourite
    schema:
      type: boolean
      example: false
    description: Filter contacts by favourite status
  - in: query
    name: contactType
    schema:
      type: string
      enum: ['work', 'home', 'personal']
      example: 'work'
    description: Filter contacts by contact type
  - in: query
    name: query
    schema:
      type: string
      example: 'John'
    description: Search query to filter contacts by name, phone number, or email (case-insensitive)
responses:
  '200':
    description: Successfully found contacts!
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Successfully found contacts!'
            data:
              type: object
              required:
                - data
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                data:
                  type: array
                  items:
                    $ref: '../../components/schemas/contacts.yaml'
                page:
                  type: integer
                  example: 1
                  description: Current page number
                perPage:
                  type: integer
                  example: 10
                  description: Number of items per page
                totalItems:
                  type: integer
                  example: 25
                  description: Total number of contacts
                totalPages:
                  type: integer
                  example: 3
                  description: Total number of pages
                hasNextPage:
                  type: boolean
                  example: true
                  description: Whether there is a next page
                hasPreviousPage:
                  type: boolean
                  example: false
                  description: Whether there is a previous page
  '400':
    $ref: ../../components/responses/400.yaml
  '401':
    $ref: '../../components/responses/401.yaml'
  '500':
    $ref: '../../components/responses/500.yaml'
